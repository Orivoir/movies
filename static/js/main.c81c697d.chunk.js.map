{"version":3,"sources":["API/themoviedb.js","core/SearchBar/SearchBar.jsx","core/Banners/Favorites/BannerFavorites.jsx","core/Banners/ToSee/BannerToSee.jsx","pages/Home/Home.jsx","core/ShowList/ShowItem.jsx","core/empty/empty.js","core/ShowList/ShowList.jsx","core/Back/Back.js","pages/Movies/Results/Results.jsx","library/Storage.js","pages/Movies/Favorites/Favorites.jsx","routes.js","pages/Movies/ToSee/ToSee.jsx","App.js","serviceWorker.js","index.js"],"names":["API_KEY","headers","Headers","append","searchMovieById","id","Promise","resolve","reject","fetch","method","then","response","json","data","catch","err","SearchBar","props","state","search","errorSubmit","error","onChangeSearch","bind","onSubmitSearch","onBlurSearch","inputSearch","React","createRef","this","current","focus","e","setState","preventDefault","trim","length","value","setAttribute","text","onFilms","results","target","className","onSubmit","ref","type","name","onChange","autoComplete","placeholder","onBlur","Component","BannerFavorites","redirect","onClick","to","count","parseInt","localStorage","getItem","isNaN","BannerToSee","Home","films","pathname","ShowItem","onFavorite","onSee","item","itemName","title","slice","toSeeCount","removeItem","forceUpdate","many","setItem","statusFavorite","favoriteCount","test","undefined","status2see","key","Date","now","Math","random","toString","src","poster_path","backdrop_path","alt","original_title","overview","favoris","removeToSee","class","toSee","Empty","content","useState","setRedirect","ShowList","items","map","Back","href","Result","location","getKeys","regex","r","RegExp","Object","keys","filter","Favorites","movies","idMovies","fav","full","split","shift","favorite","routes","exact","path","component","App","route","Boolean","window","hostname","match","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c81c697d.chunk.js","sourcesContent":["const \r\n    API_KEY = '1ccc920bf3f9b1d1ab7eb98254b66e04'\r\n    ,headers = new Headers()\r\n;\r\nheaders.append( 'Content-Type' ,'application/json' );\r\n\r\nexport const searchMoviesByText = function( text ) {\r\n\r\n    return new Promise( ( resolve , reject ) => {\r\n        \r\n        fetch(`https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&query=${text}&language=fr`,{\r\n            method: 'GET'\r\n            ,headers: headers\r\n        })\r\n        .then( response => response.json() )\r\n        .then( data => resolve( data ) )\r\n        .catch( err => reject( err ) )\r\n    } ) ;\r\n} ;\r\n\r\nexport const searchMovieById = function( id ) {\r\n\r\n    return new Promise( ( resolve , reject ) => {\r\n        \r\n        fetch(`https://api.themoviedb.org/3/movie/${id}?api_key=${API_KEY}&language=fr&external_source=imdb_id`,{\r\n            method: 'GET'\r\n            ,headers: headers\r\n        })\r\n        .then( response => response.json() )\r\n        .then( data => resolve( data ) )\r\n        .catch( err => reject( err ) )\r\n    } ) ;\r\n\r\n} ;","import React from 'react';\r\nimport {searchMoviesByText} from './../../API/themoviedb';\r\nimport './SearchBar.css';\r\n\r\nexport default class SearchBar extends React.Component {\r\n\r\n    state = {\r\n        search: \"\"\r\n        ,errorSubmit: false\r\n        ,error: false\r\n    } ;\r\n\r\n    constructor(props) {\r\n\r\n        super( props );\r\n\r\n        this.onChangeSearch = this.onChangeSearch.bind( this );     \r\n        this.onSubmitSearch = this.onSubmitSearch.bind( this );\r\n        this.onBlurSearch = this.onBlurSearch.bind( this );\r\n        \r\n        this.inputSearch = React.createRef();     \r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n        this.inputSearch.current.focus();\r\n    }\r\n\r\n    /**\r\n     * @BindMethod [constructor]\r\n     * @param {SyntheticEvent} e \r\n     */\r\n    onBlurSearch( e ) {\r\n\r\n        this.setState( {\r\n            errorSubmit: false,\r\n            error: false\r\n        } ) ;\r\n    }\r\n\r\n    /**\r\n     * @BindMethod [constructor]\r\n     * @param {SyntheticEvent} e \r\n     */\r\n    onSubmitSearch( e ) {\r\n\r\n        e.preventDefault();\r\n\r\n        const {search} = this.state;\r\n\r\n        if( search.trim().length < 2 ) {\r\n\r\n            this.setState( {\r\n                errorSubmit: \"Taille de texte invalide\",\r\n                error: true\r\n            } ) ;\r\n\r\n        } else{\r\n   \r\n            this.inputSearch.current.value = '';\r\n            this.inputSearch.current.focus();\r\n            this.inputSearch.current.setAttribute('placeholder' , search );\r\n\r\n            this.setState( {\r\n                errorSubmit: false\r\n                ,error: false\r\n                ,search: \"\"\r\n            } , () => {\r\n                searchMoviesByText( search )\r\n                .then( data => {\r\n                    this.props.onFilms( data.results );\r\n                } ) ;\r\n            } ) ;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @BindMethod [constructor]\r\n     * @param {SyntheticEvent} e \r\n     */\r\n    onChangeSearch( e ) {\r\n\r\n        e.preventDefault();\r\n\r\n        const error = e.target.value.trim() < 2; \r\n\r\n        this.setState( {\r\n            search: e.target.value\r\n            ,error: error\r\n        } ) ;\r\n    }\r\n    \r\n    render() {\r\n\r\n        const {errorSubmit,error} = this.state;\r\n\r\n        return (\r\n            <>\r\n                <form className=\"SearchBar\" onSubmit={this.onSubmitSearch}>\r\n                    {/* <label htmlFor=\"search\">search movies</label> */}\r\n                    \r\n                    <input\r\n                        ref={this.inputSearch}\r\n                        type=\"search\" \r\n                        name=\"search\"\r\n                        id=\"search\"\r\n                        className={ error ? 'error': '' }\r\n                        onChange={this.onChangeSearch}\r\n                        autoComplete=\"off\"\r\n                        placeholder={ errorSubmit ? errorSubmit : \"cherchez films ...\"}\r\n                        onBlur={this.onBlurSearch}\r\n                    />\r\n                    <button type=\"submit\">\r\n                        <i className=\"ion-icon fas fa-search\"></i>\r\n                    </button>\r\n                </form>\r\n            </>\r\n        ) ;\r\n    }\r\n\r\n} ;","import React from 'react';\r\nimport './BannerFavorites.css';\r\nimport './../Banner.css';\r\nimport {Redirect} from 'react-router-dom';\r\n\r\nexport default class BannerFavorites extends React.Component {\r\n    \r\n    state = {\r\n        redirect: false\r\n    } ;\r\n\r\n    get count() {\r\n\r\n        const count = parseInt(localStorage.getItem('count-favorites'));\r\n\r\n        return !isNaN(count) ? count: 0;\r\n    }\r\n\r\n    render() {\r\n\r\n        const {redirect} = this.state;\r\n        \r\n        return(\r\n            <>\r\n                {redirect ? redirect: null}\r\n                <section\r\n                    className=\"banner banner-favorite\"\r\n                    onClick={\r\n                        () => this.setState( {\r\n                            redirect: <Redirect to=\"/favorites\" />\r\n                        } )\r\n                    }\r\n                >\r\n\r\n                    <div>\r\n                        <i className=\"ion-icon fas fa-heart\"></i>\r\n                        <span>( {this.count} )</span>\r\n                    </div>\r\n\r\n                    <p>\r\n                        Vos films préférés !\r\n                    </p>\r\n\r\n                </section>\r\n            </>\r\n        );\r\n    }\r\n};\r\n","import React from 'react';\r\nimport {Redirect} from 'react-router-dom';\r\nimport './../Banner.css';\r\nimport './BannerToSee.css';\r\n\r\nexport default class BannerToSee extends React.Component {\r\n\r\n    state = {\r\n        redirect: false\r\n    } ;\r\n\r\n    get count() {\r\n\r\n        const count = parseInt(localStorage.getItem('count-to-see'));\r\n\r\n        return !isNaN(count) ? count: 0;\r\n    }\r\n\r\n    render() {\r\n\r\n        const {redirect} = this.state; \r\n\r\n        return(\r\n            <>\r\n                {redirect ? redirect: null}\r\n                <section\r\n                    className=\"banner banner-to-see\"\r\n                    onClick={\r\n                        () => this.setState( {\r\n                            redirect: <Redirect to=\"/see\" />\r\n                        } )\r\n                    }\r\n                >\r\n                    <div>\r\n                        <i className=\"ion-icon far fa-eye\"></i>\r\n                        <span>( {this.count} )</span>\r\n                    </div>\r\n\r\n                    <p>\r\n                        Vos films à voir !\r\n                    </p>\r\n                </section>\r\n            </>\r\n        ) ;\r\n    }\r\n    \r\n};\r\n","import React from 'react';\r\nimport SearchBar from './../../core/SearchBar/SearchBar';\r\nimport {Redirect} from 'react-router-dom';\r\nimport BannerFavorites from './../../core/Banners/Favorites/BannerFavorites';\r\nimport BannerToSee from './../../core/Banners/ToSee/BannerToSee';\r\nimport './Home.css';\r\n\r\nexport default class Home extends React.Component {\r\n\r\n    state = {\r\n        films: []\r\n    } ;\r\n\r\n    constructor( props ) {\r\n\r\n        super( props );\r\n\r\n        this.onFilms = this.onFilms.bind( this );\r\n    }\r\n\r\n    /**\r\n     * @BindMethod [constructor]\r\n     * @param {array} films \r\n     */\r\n    onFilms( films ) {\r\n\r\n        this.setState( {\r\n            films: films\r\n        } );\r\n    }\r\n\r\n    render() {\r\n\r\n        const {films} = this.state;\r\n\r\n        return (\r\n            <section className=\"Home\">\r\n                <SearchBar onFilms={this.onFilms} />\r\n                <BannerFavorites />\r\n                <BannerToSee />\r\n                {\r\n                    films.length ?\r\n                    <Redirect to={\r\n                        {\r\n                            pathname: '/results'\r\n                            ,state: {films: films}\r\n                        }\r\n                    } /> : null\r\n                }\r\n            </section>\r\n        );\r\n    }\r\n\r\n} ;","import React from 'react';\r\n\r\nexport default class ShowItem extends React.Component {\r\n    \r\n    constructor( props ) {\r\n\r\n        super(props);\r\n        \r\n        this.onFavorite = this.onFavorite.bind( this );\r\n        this.onSee = this.onSee.bind( this );\r\n    }\r\n\r\n    \r\n    removeToSee( item ) {\r\n\r\n        const itemName = `to-see-${item.id}-${item.title.slice(0,3)}`;\r\n\r\n        if( localStorage.getItem( itemName ) ) {\r\n            this.toSeeCount( -1 );\r\n        }\r\n\r\n        localStorage.removeItem( `${itemName}`) ;\r\n        this.forceUpdate();\r\n    }\r\n\r\n    favoris( item ) {\r\n\r\n        const status = localStorage.getItem( `favorite-${item.id}-${item.title.slice(0,3)}`) ;\r\n        return !!status;\r\n    }\r\n\r\n    toSee( item ) {\r\n        \r\n        const status = localStorage.getItem( `to-see-${item.id}-${item.title.slice(0,3)}`) ;\r\n        return !!status;\r\n    }\r\n\r\n    favoriteCount( many ) {\r\n\r\n        let count = parseInt( localStorage.getItem('count-favorites') ) ;\r\n        count = !isNaN( count ) ? count: 0;\r\n\r\n        count += many;\r\n\r\n        localStorage.setItem( 'count-favorites' , count );\r\n\r\n        return count;\r\n    }\r\n\r\n    toSeeCount( many ) {\r\n        \r\n        let count = parseInt( localStorage.getItem('count-to-see') ) ;\r\n        count = !isNaN( count ) ? count: 0;\r\n\r\n        count += many;\r\n\r\n        localStorage.setItem( 'count-to-see' , count );\r\n\r\n        return count;\r\n    }\r\n    \r\n    /**\r\n     * @BindMethod [constructor]\r\n     * @param {SyntheticEvent} e \r\n     */\r\n    onFavorite( e ) {\r\n\r\n        const item = e.item;\r\n        const method = (!item.statusFavorite ? 'set':'remove')+'Item';\r\n        \r\n        this.favoriteCount( /set/.test(method) ? 1 : -1 );\r\n\r\n        localStorage[method]( `favorite-${item.id}-${item.title.slice(0,3)}` , !item.statusFavorite ? true : undefined );\r\n        \r\n        this.forceUpdate();\r\n    }\r\n\r\n    /**\r\n     * @BindMethod [constructor]\r\n     * @param {SyntheticEvent} e \r\n     */\r\n    onSee( e ) {\r\n        \r\n        const \r\n            item  = e.item\r\n            ,method = (!item.status2see ? 'set':'remove')+'Item'\r\n        ;\r\n        \r\n        this.toSeeCount( /set/.test(method) ? 1 : -1 );\r\n\r\n        localStorage[method]( `to-see-${item.id}-${item.title.slice(0,3)}` , !item.status2see ? true : undefined );\r\n\r\n        this.forceUpdate();\r\n    }\r\n\r\n    render() {\r\n\r\n        const {item} = this.props;\r\n\r\n        return (            \r\n            <li key={(Date.now()/(Math.random()*1.25)).toString() }>\r\n                <section>\r\n                    <figure>\r\n                        <img\r\n                            src={`http://image.tmdb.org/t/p/w300${( item.poster_path || item.backdrop_path )}`}\r\n                            alt=\"poster film\"\r\n                        />\r\n                    </figure>\r\n                </section>\r\n\r\n                <section>\r\n                    <h2>{item.title || item.original_title}</h2>\r\n\r\n                    <p className=\"overview\">\r\n                        {item.overview || 'résumé indisponible'}\r\n                    </p>\r\n\r\n                    <div>\r\n                        <button\r\n                            onClick={e => {\r\n                                e.preventDefault();\r\n                                e.item = item;\r\n                                e.item.statusFavorite = this.favoris(item);\r\n                                \r\n                                this.removeToSee( item );\r\n                                this.onFavorite( e );\r\n                            }}\r\n                            className=\"favorite\"\r\n                        >\r\n                            <ion-icon name={`heart${!this.favoris(item) ? \"-broken\":\"\"}`}></ion-icon>\r\n                            <i class={`ion-icon fas fa-heart${this.favoris(item) ? \"-broken\":\"\"}`}></i>\r\n                        </button>\r\n                        \r\n                        <button\r\n                            onClick={e => {\r\n                                e.preventDefault();\r\n                                e.item = item;\r\n                                e.item.status2see = this.toSee(item);\r\n                                \r\n                                if( !this.favoris( item ) ) {\r\n                                    this.onSee( e );\r\n                                }\r\n                            }}\r\n                            className=\"to-see\"\r\n                        >\r\n                            <i class={`ion-icon far fa-eye${!this.toSee(item) ? '':'-slash'}`}></i>\r\n                        </button>\r\n                    </div>\r\n\r\n                </section>\r\n            </li>\r\n        );\r\n    }\r\n};\r\n","import React , {useState} from 'react';\r\nimport './empty.css';\r\nimport {Redirect} from 'react-router-dom';\r\n\r\nfunction Empty({content,target}) {\r\n\r\n    const [redirect,setRedirect] = useState( false );\r\n\r\n    return (\r\n        <>\r\n            {redirect}\r\n            <p className=\"Empty\">\r\n                <strong>{content}</strong>\r\n                &nbsp;sont actuellement vide ! \r\n                {\r\n                    target &&\r\n                    <>\r\n                    <br />\r\n                    vous pouvez les remplir\r\n                    <button\r\n                        onClick={() => setRedirect( <Redirect to={target} /> ) }\r\n                    >\r\n                        ici\r\n                    </button>\r\n                    </>\r\n                }\r\n            </p>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Empty;","import React from 'react';\r\nimport './ShowList.css';\r\nimport ShowItem from './ShowItem';\r\nimport Empty from './../empty/empty';\r\n\r\nexport default class ShowList extends React.Component {\r\n\r\n    render() {\r\n\r\n        const {items,name} = this.props;\r\n\r\n        return (\r\n            <>\r\n                {\r\n                    !items.length &&\r\n                    <Empty content={`vos films ${name}`} target=\"/\" />\r\n                }\r\n                <ul className=\"ShowList\">\r\n                    {\r\n                        items.map( item => (\r\n                            <ShowItem item={item} />\r\n                        ) )\r\n                    }\r\n                </ul>\r\n            </>\r\n        ) ;\r\n    }\r\n} ;","import React , {useState} from 'react';\r\nimport {Redirect} from 'react-router-dom';\r\nimport './Back.css';\r\n\r\nfunction Back({target,state}) {\r\n\r\n    const [redirect,setRedirect] = useState( false );\r\n\r\n    return (\r\n        <>\r\n        {\r\n            !redirect ?\r\n                <a \r\n                    href=\"/\"\r\n                    onClick={e => e.preventDefault()}\r\n                >\r\n                    <section\r\n                        onClick={() => setRedirect( <Redirect to={\r\n                            {\r\n                                pathname: target\r\n                                ,state: state || {}\r\n                            }\r\n                        } /> ) }\r\n                        className=\"Back\"\r\n                    >\r\n                    <i class=\"ion-icon fas fa-hand-point-left\"></i>\r\n                    <span>Retour</span>\r\n                    </section>\r\n                </a>:\r\n                redirect\r\n        }\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Back;","import React from 'react';\r\nimport ShowList from './../../../core/ShowList/ShowList';\r\nimport {Redirect} from 'react-router-dom'\r\nimport Back from './../../../core/Back/Back';\r\n\r\nexport default class Result extends React.Component {\r\n\r\n    render() {\r\n\r\n        return (\r\n            <>\r\n             {\r\n                !this.props.location.state ?\r\n                \r\n                <Redirect to=\"/\" /> :\r\n                <>\r\n                    <Back\r\n                        target=\"/\"\r\n                    />\r\n                    <ShowList items={\r\n                        this.props.location.state.films\r\n                    } />\r\n                </>\r\n            }\r\n            </>\r\n\r\n        ) ;\r\n    }\r\n\r\n} ;","export const getKeys =  function( regex ) {\r\n\r\n    const r = regex instanceof RegExp ? regex: new RegExp( regex.toString() ) ;\r\n\r\n    return Object.keys( localStorage ).filter( key => r.test( key ) ) ;\r\n} ;","import React from 'react';\r\nimport Back from './../../../core/Back/Back';\r\nimport {getKeys} from './../../../library/Storage';\r\nimport {searchMovieById} from './../../../API/themoviedb';\r\nimport ShowList from './../../../core/ShowList/ShowList';\r\nimport  './Favorites.css';\r\n\r\nexport default class Favorites extends React.Component {\r\n    \r\n    state = {\r\n        movies: []\r\n        ,idMovies: []\r\n    } ;\r\n\r\n    constructor(props) {\r\n\r\n        super( props );\r\n        \r\n        const fav = getKeys( /^favorite-/ );\r\n\r\n        this.state.idMovies = fav.map( key => {\r\n\r\n            const full = key.split('-');\r\n\r\n            full.shift();\r\n\r\n            const id = full[0];\r\n\r\n            return id;\r\n        } ) ;\r\n    }\r\n\r\n    componentDidMount(){\r\n\r\n        this.favorite();\r\n    }\r\n\r\n    favorite() {\r\n\r\n        const {idMovies} = this.state;\r\n\r\n        if( !idMovies.length ) return;\r\n\r\n        searchMovieById( idMovies[0] ).then( data => {\r\n\r\n            idMovies.shift();\r\n\r\n            this.setState( state => ({\r\n                movies: [...state.movies , data]\r\n                ,idMovies: idMovies\r\n            }) , () => (\r\n                this.favorite()\r\n            ) ) ;\r\n\r\n        } ) ;\r\n    }\r\n \r\n    render() {\r\n\r\n        const {movies} = this.state;\r\n\r\n        return(\r\n            <>\r\n                <Back target=\"/\" />\r\n\r\n                <ShowList\r\n                    items={movies} name=\"favoris\"\r\n                />\r\n            </>\r\n        );\r\n    }\r\n};\r\n","import Home from './pages/Home/Home';\r\nimport Result from './pages/Movies/Results/Results';\r\nimport Favorites from './pages/Movies/Favorites/Favorites';\r\nimport ToSee from './pages/Movies/ToSee/ToSee';\r\n\r\nconst routes = [\r\n    {\r\n        id: 0\r\n        ,exact: true\r\n        ,path: '/'\r\n        ,name: 'home'\r\n        ,component: Home\r\n    }, \r\n    {\r\n        id: 1\r\n        ,exact: false\r\n        ,path: '/results'\r\n        ,name: 'results'\r\n        ,component: Result\r\n    } ,  \r\n    {\r\n        id: 2\r\n        ,exact: false\r\n        ,path: '/favorites'\r\n        ,name: 'favorites'\r\n        ,component: Favorites\r\n    } ,  \r\n    {\r\n        id: 3\r\n        ,exact: false\r\n        ,path: '/see'\r\n        ,name: 'see'\r\n        ,component: ToSee\r\n    } ,  \r\n] ;\r\n\r\nexport default routes;","import React from 'react';\r\nimport Back from './../../../core/Back/Back';\r\nimport {getKeys} from './../../../library/Storage';\r\nimport {searchMovieById} from './../../../API/themoviedb';\r\nimport ShowList from './../../../core/ShowList/ShowList';\r\nimport  './ToSee.css';\r\n\r\n\r\nexport default class Favorites extends React.Component {\r\n    \r\n    state = {\r\n        movies: []\r\n        ,idMovies: []\r\n    } ;\r\n\r\n    constructor(props) {\r\n\r\n        super( props );\r\n        \r\n        const fav = getKeys( /^to-see-/ );\r\n\r\n        this.state.idMovies = fav.map( key => {\r\n\r\n            const full = key.split('-');\r\n\r\n            full.shift();\r\n            full.shift();\r\n\r\n            const id = full[0];\r\n\r\n            return id;\r\n        } ) ;\r\n    }\r\n\r\n    componentDidMount(){\r\n\r\n        this.toSee();\r\n    }\r\n\r\n    toSee() {\r\n\r\n        const {idMovies} = this.state;\r\n\r\n        if( !idMovies.length ) return;\r\n\r\n        searchMovieById( idMovies[0] ).then( data => {\r\n\r\n            idMovies.shift();\r\n\r\n            this.setState( state => ({\r\n                movies: [...state.movies , data]\r\n                ,idMovies: idMovies\r\n            }) , () => (\r\n                this.toSee()\r\n            ) ) ;\r\n\r\n        } ) ;\r\n    }\r\n \r\n    render() {\r\n\r\n        const {movies} = this.state;\r\n\r\n        return(\r\n            <>\r\n                <Back target=\"/\" />\r\n\r\n                <ShowList\r\n                    items={movies} name=\"à voir\"\r\n                />\r\n            </>\r\n        );\r\n    }\r\n};\r\n","import React from 'react';\nimport './App.css';\nimport {Switch,Route} from 'react-router-dom';\nimport routes from './routes';\n\nexport default class App extends React.Component {\n  \n  render() {\n\n    return (\n      <>\n        <Switch>\n          {\n            routes.map( route => (\n              <Route\n                key={route.id}\n                component={route.component}\n                path={route.path}\n                exact={route.exact}\n              />\n            ) )\n          }\n        </Switch>\n      </>\n    );\n  }\n}\n\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  // SecurityError\n  // if ('serviceWorker' in navigator) {\n  //   navigator.serviceWorker.ready.then(registration => {\n  //     registration.unregister();\n  //   });\n  // }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {HashRouter as Router} from 'react-router-dom';\n\nReactDOM.render(\n    <Router>\n        <App />\n    </Router>\n    ,document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}